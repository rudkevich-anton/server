<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="mdfile_8cpp" kind="file" language="C++">
    <compoundname>mdfile.cpp</compoundname>
    <includes refid="mdfile_8h" local="yes">mdfile.h</includes>
    <incdepgraph>
      <node id="1">
        <label>E:/Users/1/Desktop/Anton_cpp/server-main/mdfile.cpp</label>
        <link refid="mdfile_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mdfile.h</label>
        <link refid="mdfile_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>arpa/inet.h</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>cryptopp/cryptlib.h</label>
      </node>
      <node id="16">
        <label>cryptopp/hex.h</label>
      </node>
      <node id="17">
        <label>cryptopp/md5.h</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>ctime</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>getopt.h</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>netinet/in.h</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="mdfile_8cpp_1aca36b4f222e88d8334a40aba414f7e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string MD</definition>
        <argsstring>(std::string sah)</argsstring>
        <name>MD</name>
        <param>
          <type>std::string</type>
          <declname>sah</declname>
        </param>
        <briefdescription>
<para>Обертка для функций хеширования и ошибок </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/Users/1/Desktop/Anton_cpp/server-main/mdfile.cpp" line="5" column="13" bodyfile="E:/Users/1/Desktop/Anton_cpp/server-main/mdfile.cpp" bodystart="5" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="mdfile_8cpp_1a198154bf74cde3b84f5b9aacce83e01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void errors</definition>
        <argsstring>(std::string error, std::string name)</argsstring>
        <name>errors</name>
        <param>
          <type>std::string</type>
          <declname>error</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/Users/1/Desktop/Anton_cpp/server-main/mdfile.cpp" line="11" column="6" bodyfile="E:/Users/1/Desktop/Anton_cpp/server-main/mdfile.cpp" bodystart="11" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="mdfile_8cpp_1a9748244e5c9ec9ac4ea4ee5c77f29959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int er</definition>
        <argsstring>(std::string file_name, std::string file_error)</argsstring>
        <name>er</name>
        <param>
          <type>std::string</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>file_error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/Users/1/Desktop/Anton_cpp/server-main/mdfile.cpp" line="21" column="5" bodyfile="E:/Users/1/Desktop/Anton_cpp/server-main/mdfile.cpp" bodystart="21" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mdfile_8h" kindref="compound">mdfile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">std::string<sp/><ref refid="mdfile_8cpp_1aca36b4f222e88d8334a40aba414f7e39" kindref="member">MD</ref>(std::string<sp/>sah){</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>Weak::MD5<sp/>hash;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>digest;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>StringSource(sah,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashFilter(hash,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HexEncoder(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StringSink(digest))));<sp/><sp/></highlight><highlight class="comment">//<sp/>строка-приемник</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>digest;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mdfile_8cpp_1a198154bf74cde3b84f5b9aacce83e01f" kindref="member">errors</ref>(std::string<sp/>error,<sp/>std::string<sp/>name){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>file;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>file.open(name,<sp/>std::ios::app);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file.is_open()){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>seconds<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm*<sp/>timeinfo<sp/>=<sp/>localtime(&amp;seconds);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file&lt;&lt;error&lt;&lt;</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">&lt;&lt;asctime(timeinfo)&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>error<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mdfile_8cpp_1a9748244e5c9ec9ac4ea4ee5c77f29959" kindref="member">er</ref>(std::string<sp/>file_name,<sp/>std::string<sp/>file_error)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>file;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>file.exceptions(std::ifstream::badbit<sp/>|<sp/>std::ifstream::failbit);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.open(file_name);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;<sp/>ex){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>open<sp/>file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdfile_8cpp_1a198154bf74cde3b84f5b9aacce83e01f" kindref="member">errors</ref>(error,<sp/>file_error);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>12;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/Users/1/Desktop/Anton_cpp/server-main/mdfile.cpp"/>
  </compounddef>
</doxygen>
